name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: cargo test --verbose
      - name: Run clippy
        run: cargo clippy --verbose

  build:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build for release
        run:  cargo build --verbose --release --target-dir target

  release:
    if: startsWith(github.ref, 'refs/tags/v')  && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            target/release/glitch* 
            target/release/*.pdb # Or your preferred symbol file extension
            !target/release/*.d 

  prerelease:
    if: ${{ !startsWith(github.ref, 'refs/tags/v') }} && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Create Pre-Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: prerelease
          release_name: Pre-Release ${{ matrix.os }}
          draft: true
          prerelease: true
          files: |
            target/release/glitch* 
            target/release/*.pdb # Or your preferred symbol file extension
            !target/release/*.d